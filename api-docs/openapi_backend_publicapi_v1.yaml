components:
  schemas:
    AgreementSlimDTO:
      type: object
      properties:
        cloudUrl:
          type: string
        name:
          type: string
    CheckResultValueDTO:
      type: object
      properties:
        id:
          type: string
        measure:
          type: object
          $ref: '#/components/schemas/MeasureDTO'
        value:
          type: number
        valueLabel:
          type: string
        valueSeries:
          type: object
          $ref: '#/components/schemas/CheckResultValueSeriesDTO'
      required:
      - id
    CheckResultValueSeriesDTO:
      type: object
      properties:
        values:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/CheckResultValueSeriesDTO_ValueSeriesValue'
    CheckResultValueSeriesDTO_ValueSeriesValue:
      type: object
      properties:
        label:
          type: string
        level:
          type: object
          $ref: '#/components/schemas/EvaluationStatusDTO'
        value:
          type: number
    ChecksContentDTO:
      type: object
      properties:
        agreements:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/AgreementSlimDTO'
        attributes:
          type: object
          $ref: '#/components/schemas/MapOfStringToString'
        cloudUrl:
          type: string
        column:
          type: string
        createdAt:
          type: string
        datasets:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetSlimDTO'
        definition:
          type: string
        description:
          type: string
        evaluationStatus:
          type: object
          $ref: '#/components/schemas/EvaluationStatusDTO'
        group:
          type: object
          $ref: '#/components/schemas/ChecksContentDTO_Group'
        id:
          type: string
        incidents:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/IncidentSlimDTO'
        lastCheckResultValue:
          type: object
          $ref: '#/components/schemas/CheckResultValueDTO'
        lastCheckRunTime:
          type: string
        lastUpdated:
          type: string
        name:
          type: string
        owner:
          type: object
          $ref: '#/components/schemas/OwnerDTO'
      required:
      - agreements
      - createdAt
      - datasets
      - evaluationStatus
      - id
      - incidents
      - name
      - owner
    ChecksContentDTO_Group:
      type: object
      properties:
        groupType:
          type: string
        identity:
          type: string
        name:
          type: string
    ColumnMetricContentDTO:
      type: object
      properties:
        average:
          type: number
        averageLength:
          type: number
        distinctCount:
          type: number
        extremeValues:
          type: object
          $ref: '#/components/schemas/ExtremeValuesContentDTO'
        frequentValues:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ValueCountContentDTO'
        histogram:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/HistogramBinContentDTO'
        maximum:
          type: object
          $ref: '#/components/schemas/_object'
        maximumLength:
          type: integer
          format: int32
        maximumTimestamp:
          type: string
        median:
          type: number
        minimum:
          type: object
          $ref: '#/components/schemas/_object'
        minimumLength:
          type: integer
          format: int32
        minimumTimestamp:
          type: string
        missingCount:
          type: number
        standardDeviation:
          type: number
        sum:
          type: number
        variance:
          type: number
    DataQualityStatusDTO:
      type: string
      enum:
      - pass
      - warn
      - fail
    DatasetAttributeContentDTO:
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/_object'
        description:
          type: string
        id:
          type: string
        label:
          type: string
        name:
          type: string
        type:
          type: object
          $ref: '#/components/schemas/DatasetAttributeTypeDTO'
      required:
      - id
      - label
      - name
      - type
    DatasetAttributeTypeDTO:
      type: string
      enum:
      - checkbox
      - datetime
      - number
      - text
      - single_select
      - multi_select
    DatasetColumnProfilingContentDTO:
      type: object
      properties:
        metrics:
          type: object
          $ref: '#/components/schemas/ColumnMetricContentDTO'
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
    DatasetOwnerDTO:
      type: object
      properties:
        type:
          type: object
          $ref: '#/components/schemas/DatasetOwnerTypeDTO'
        user:
          type: object
          $ref: '#/components/schemas/UserContentDTO'
        userGroup:
          type: object
          $ref: '#/components/schemas/UserGroupContentBasicDTO'
      required:
      - type
    DatasetOwnerTypeDTO:
      type: string
      enum:
      - user
      - userGroup
    DatasetResponsibilityContentDTO:
      type: object
      properties:
        managed:
          type: boolean
        role:
          type: object
          $ref: '#/components/schemas/DatasetRoleContentDTO'
        type:
          type: object
          $ref: '#/components/schemas/ResponsibilityTypeDTO'
        userGroupId:
          type: string
        userId:
          type: string
      required:
      - managed
      - role
      - type
    DatasetResponsibilityContentRequestDTO:
      type: object
      properties:
        roleId:
          type: string
        type:
          type: object
          $ref: '#/components/schemas/ResponsibilityTypeDTO'
        userGroupId:
          type: string
        userId:
          type: string
      required:
      - roleId
      - type
    DatasetRoleContentDTO:
      type: object
      properties:
        configureDataset:
          type: boolean
        createCheckProposals:
          type: boolean
        deleteDataset:
          type: boolean
        id:
          type: string
        manageChecks:
          type: boolean
        manageIncidents:
          type: boolean
        managePermissions:
          type: boolean
        name:
          type: string
        viewFailedRows:
          type: boolean
        viewProfilingAndSamples:
          type: boolean
      required:
      - id
      - name
    DatasetSlimDTO:
      type: object
      properties:
        cloudUrl:
          type: string
        id:
          type: string
        name:
          type: string
    DatasetsContentDTO:
      type: object
      properties:
        attributes:
          type: object
          $ref: '#/components/schemas/MapOfStringTo_object'
        checks:
          type: number
        cloudUrl:
          type: string
        dataQualityStatus:
          type: object
          $ref: '#/components/schemas/DataQualityStatusDTO'
        datasource:
          type: object
          $ref: '#/components/schemas/DatasourcePropertiesDTO'
        healthStatus:
          type: integer
          format: int32
        id:
          type: string
        incidents:
          type: number
        label:
          type: string
        lastUpdated:
          type: string
        name:
          type: string
        owners:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetOwnerDTO'
        qualifiedName:
          type: string
        tags:
          type: array
          items:
            type: string
      required:
      - checks
      - cloudUrl
      - healthStatus
      - id
      - incidents
      - name
    DatasourcePropertiesDTO:
      type: object
      properties:
        label:
          type: string
        name:
          type: string
        prefix:
          type: string
        type:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    EvaluationStatusDTO:
      type: string
      enum:
      - pass
      - warn
      - fail
      - notEvaluated
    ExtremeValuesContentDTO:
      type: object
      properties:
        maximum:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/_object'
        minimum:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/_object'
    HistogramBinContentDTO:
      type: object
      properties:
        count:
          type: number
        lowerBound:
          type: number
        upperBound:
          type: number
      required:
      - count
      - lowerBound
      - upperBound
    IncidentContentDTO:
      type: object
      properties:
        description:
          type: string
        severity:
          type: object
          $ref: '#/components/schemas/IncidentSeverityDTO'
        cloudUrl:
          type: string
        id:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        status:
          type: object
          $ref: '#/components/schemas/IncidentStatusDTO'
      required:
      - description
      - severity
    IncidentSeverityDTO:
      type: string
      enum:
      - minor
      - major
      - critical
    IncidentSlimDTO:
      type: object
      properties:
        cloudUrl:
          type: string
        id:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        status:
          type: object
          $ref: '#/components/schemas/IncidentStatusDTO'
      required:
      - cloudUrl
      - id
      - name
      - number
      - status
    IncidentStatusDTO:
      type: string
      enum:
      - reported
      - investigating
      - fixing
      - resolved
    LogLevelDTO:
      type: string
      enum:
      - debug
      - info
      - warning
      - error
    LogsContentDTO:
      type: object
      properties:
        index:
          type: integer
          format: int32
        level:
          type: object
          $ref: '#/components/schemas/LogLevelDTO'
        message:
          type: string
        timestamp:
          type: string
      required:
      - index
      - level
      - message
      - timestamp
    MapOfStringToString:
      type: object
      additionalProperties: true
    MapOfStringTo_object:
      type: object
      additionalProperties: true
    MeasureDTO:
      type: string
      enum:
      - time
    OwnerDTO:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        lastName:
          type: string
    PublicApiCheckSlimDTO:
      type: object
      properties:
        evaluationStatus:
          type: object
          $ref: '#/components/schemas/EvaluationStatusDTO'
        id:
          type: string
    PublicApiChecksResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ChecksContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiDatasetAttributesResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetAttributeContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiDatasetProfilingResponse:
      type: object
      properties:
        columnCount:
          type: number
        columns:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetColumnProfilingContentDTO'
        datasetId:
          type: string
        profilingTime:
          type: string
        rowCount:
          type: number
      required:
      - columns
      - datasetId
    PublicApiDatasetResponsibilitiesResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetResponsibilityContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiDatasetRolesResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetRoleContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiDatasetsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetsContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiScanDefinitionSlim:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
    PublicApiScanLogsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/LogsContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiScanStatusResponse:
      type: object
      properties:
        agentId:
          type: string
        checks:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/PublicApiCheckSlimDTO'
        cloudUrl:
          type: string
        created:
          type: string
        ended:
          type: string
        errors:
          type: integer
          format: int32
        failures:
          type: integer
          format: int32
        id:
          type: string
        scanDefinition:
          type: object
          $ref: '#/components/schemas/PublicApiScanDefinitionSlim'
        scanTime:
          type: string
        started:
          type: string
        state:
          type: object
          $ref: '#/components/schemas/ScanStateDTO'
        submitted:
          type: string
        warnings:
          type: integer
          format: int32
      required:
      - cloudUrl
      - created
      - id
      - state
    PublicApiTestLoginResponse:
      type: object
      properties:
        organisationName:
          type: string
    PublicApiUpdateDatasetDTO:
      type: object
      properties:
        attributes:
          type: object
          $ref: '#/components/schemas/MapOfStringTo_object'
        label:
          type: string
        owners:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/PublicApiUpdateDatasetOwnerRequestDTO'
        tags:
          type: array
          items:
            type: string
    PublicApiUpdateDatasetOwnerRequestDTO:
      type: object
      properties:
        type:
          type: object
          $ref: '#/components/schemas/DatasetOwnerTypeDTO'
        userGroupId:
          type: string
        userId:
          type: string
      required:
      - type
    PublicApiUpdateDatasetResponsibilitiesRequestDTO:
      type: object
      properties:
        responsibilities:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DatasetResponsibilityContentRequestDTO'
      required:
      - responsibilities
    PublicApiUpdateIncidentDTO:
      type: object
      properties:
        description:
          type: string
        severity:
          type: object
          $ref: '#/components/schemas/IncidentSeverityDTO'
        status:
          type: object
          $ref: '#/components/schemas/IncidentStatusDTO'
        title:
          type: string
    PublicApiUserGroupsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/UserGroupContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    PublicApiUsersResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/UserContentDTO'
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      required:
      - content
      - first
      - last
      - number
      - size
      - totalElements
      - totalPages
    ResponsibilityTypeDTO:
      type: string
      enum:
      - user
      - userGroup
    ScanStateDTO:
      type: string
      enum:
      - queuing
      - executing
      - started
      - cancelationRequested
      - timeOutRequested
      - canceled
      - timedOut
      - failed
      - completedWithErrors
      - completedWithFailures
      - completedWithWarnings
      - completed
    UserContentDTO:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        lastName:
          type: string
        userId:
          type: string
      required:
      - email
      - userId
    UserGroupContentBasicDTO:
      type: object
      properties:
        name:
          type: string
        userGroupId:
          type: string
      required:
      - name
      - userGroupId
    UserGroupContentDTO:
      type: object
      properties:
        name:
          type: string
        userGroupId:
          type: string
        users:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/UserContentDTO'
      required:
      - name
      - userGroupId
      - users
    ValueCountContentDTO:
      type: object
      properties:
        count:
          type: number
        value:
          type: object
          $ref: '#/components/schemas/_object'
    _object:
      type: object
  securitySchemes:
    basicAuthApiKey:
      scheme: basic
      type: http
info:
  description: "Use Soda Cloud's public API to:\n- connect Soda Cloud to your data\
    \ catalog\n- trigger scheduled scans in Soda Cloud from within your data pipeline\n\
    - access dataset and check info in Soda Cloud\n- access dataset responsibilities\
    \ in Soda Cloud\n- access user and user groups in Soda Cloud\n- update datasets\
    \ in Soda Cloud\n- update dataset responsibilities in Soda Cloud\n- update incidents\
    \ in Soda Cloud\n\n## Authentication\n\nThis API supports authentication using\
    \ a HTTP `Basic` authentication header. This authentication method works with\
    \ Single Sign-On (SSO) and for users who belong to more than one organization\
    \ in Soda Cloud. For Basic authentication, this API uses API keys rather than\
    \ username and password values.\n\nTo learn how to generate the API keys that\
    \ you need for basic authentication, access the [Generate API keys for use with\
    \ Soda Library or a Soda Cloud API](https://docs.soda.io/soda-cloud/api-keys.html#generate-api-keys-for-use-with-soda-library-or-a-soda-cloud-api).\n\
    \n## Examples\n\n```curl\ncurl -X GET \\ \n    --location \"https://cloud.soda.io/api/v1/test-login\"\
    \ \\\n    --basic \n    --user 5100a9bc-8cbe-44ab-8263-136ba0f35c1d:VIorf5ZGgE5yqMc-gT7amAsAiotqgySSUh98VBtek_6x6fP3asnybQ\n\
    ```\n"
  title: Soda Cloud API
  version: v1
openapi: 3.1.0
paths:
  /api/v1/checks:
    get:
      description: |-
        This endpoint enables you to gather information about the checks that in exist in your organization's Soda Cloud account, including information about the datasets and agreements with which they are associated and the incidents to which they are linked. .

        This GET is a paginated API that uses the following parameters to request specific details:

        - `size`: Supply an integer value between 10 and 1000, inclusive. The default value is 10.

        - `page`: Supply an integer value. The default value is 0.

        - `datasetId`: Optionally, use this parameter to collect only the information for checks associated with a specific dataset. Find the `datasetId` in the URL of the dataset page in Soda Cloud.

        - `checkIds`: Optionally, use this parameter to collect only the information for a specific batch of checks. Provide multiple values as a comma-separated list of check IDs, which you can find on the individual check pages in Soda Cloud. This query parameter is limited to 1000 check IDs and it can't be combined with other query parameters like `page`, `datasetId`, `size`.

        If not specified, the query gathers information for all checks in the account and sorts the results by check name in ascending order.

        ## Authorization

        Soda only returns the checks linked to datasets to which the user has **View dataset** permissions. Soda Cloud Admins have access to all checks.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Checks`

        ## Rate limiting

        10 requests/60 seconds
      operationId: GET/api/v1/checks
      parameters:
      - in: query
        name: checkIds
        schema:
          type: string
      - in: query
        name: datasetId
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiChecksResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Check information
      tags:
      - Checks
  /api/v1/datasets:
    get:
      description: |-
        This endpoint enables you to gather information about the datasets that in exist in your organization's Soda Cloud account, including information about the Soda Cloud resources with which it is associated, such as data source, incidents, attributes and health status.

        This GET is a paginated API that uses the following parameters to request specific details:

        - `size`: Supply an integer value between 10 and 1000, inclusive. The default value is 10.

        - `page`: Supply an integer value. The default value is 0.

        - `from`: Optionally, use this parameter to collect only the information for datasets that have been updated after a particular point in time.  Supply an ISO8601 timestamp value. Example: `2023-12-31T10:15:30+01:00`

        - `datasourceName`:  Optionally, use this parameter to collect only the information for datasets associated with a specific datasource.

        - `search`: Optionally, use this parameter to perform a fuzzy search on the dataset name.

        If not specified, the query gathers information for all datasets in the account and sorts the results first by dataset name and then by datasource name in ascending order.

        ## Authorization

        Soda only returns the datasets to which the user has **View dataset** permissions. Soda Cloud Admins have access to all datasets.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Datasets`

        ## Rate limiting

        10 requests/60 seconds
      operationId: GET/api/v1/datasets
      parameters:
      - in: query
        name: datasourceName
        schema:
          type: string
      - in: query
        name: from
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiDatasetsResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Dataset information
      tags:
      - Datasets
  /api/v1/datasets/attributes:
    get:
      description: |-
        This endpoint enables you to gather information about the dataset attributes available in your organization's Soda Cloud account. Use the dataset attributes to categorise and organise your datasets.

        This GET is a paginated API that uses the following parameters to request specific details:

        - `size`: Supply an integer value between 10 and 1000, inclusive. The default value is 1000.

        - `page`: Supply an integer value. The default value is 0.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Datasets`

        ## Rate limiting

        60 requests/60 seconds
      operationId: GET/api/v1/datasets/attributes
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiDatasetAttributesResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get dataset attributes
      tags:
      - Datasets
  /api/v1/datasets/roles:
    get:
      description: |-
        This endpoint enables you to gather information about the dataset roles available in your organization's Soda Cloud account. Use the dataset roles to manage access to individual datasets.

        This GET is a paginated API that uses the following parameters to request specific details:

        - `size`: Supply an integer value between 10 and 100, inclusive. The default value is 100.

        - `page`: Supply an integer value. The default value is 0.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Datasets`

        ## Rate limiting

        60 requests/60 seconds
      operationId: GET/api/v1/datasets/roles
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiDatasetRolesResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: List dataset roles
      tags:
      - Datasets
  /api/v1/datasets/{datasetId}:
    post:
      description: |-
        This endpoint enables you to update an existing dataset name, owners, tags or attributes in your organization's Soda Cloud account.

        ## Authorization

        Only users with **Configure dataset** permission can update dataset attributes. Soda Cloud Admins have permission to update all datasets.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Datasets`

        ## Rate limiting

        10 requests/60 seconds
      operationId: "POST/api/v1/datasets/{datasetId}"
      parameters:
      - in: path
        name: datasetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/PublicApiUpdateDatasetDTO'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/DatasetsContentDTO'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Update dataset
      tags:
      - Datasets
  /api/v1/datasets/{datasetId}/profiling:
    get:
      description: |-
        This endpoint allows you to retrieve detailed profiling information for a specific dataset in your organization's Soda Cloud account. Profiling information provides insights into the dataset's structure, statistical summaries, and data characteristics.

        ## Authorization

        Only users with **Access dataset profiling and sampling** permission can view dataset profiling. Soda Cloud Admins have access to profiling information for all datasets.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Datasets`

        ## Rate limiting

        1 requests/60 seconds
      operationId: "GET/api/v1/datasets/{datasetId}/profiling"
      parameters:
      - in: path
        name: datasetId
        required: true
        schema:
          type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiDatasetProfilingResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get dataset profiling information
      tags:
      - Datasets
  /api/v1/datasets/{datasetId}/responsibilities:
    get:
      description: |-
        This endpoint enables you to gather information about the user and user groups permissions assigned to a dataset, and their associated roles in your organization's Soda Cloud account.

        This GET is a paginated API that uses the following parameters to request specific details:

        - `size`: Supply an integer value between 1 and 100, inclusive. The default value is 100.

        - `page`: Supply an integer value. The default value is 0.

        ## Authorization

        Soda only returns the dataset responsibilities to which the user has **View dataset** permissions. Soda Cloud Admins have access to all dataset responsibilities.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Datasets`

        ## Rate limiting

        60 requests/60 seconds
      operationId: "GET/api/v1/datasets/{datasetId}/responsibilities"
      parameters:
      - in: path
        name: datasetId
        required: true
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiDatasetResponsibilitiesResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: List dataset responsibilities
      tags:
      - Datasets
    post:
      description: |-
        This endpoint enables you to update the user and user groups permissions and their associated roles for a dataset in your organization's Soda Cloud account.

        **Note**: This API fully replaces the existing responsibilities. The entire list of responsibilities must be provided in the request, including both new and existing entries, as any omissions will result in their removal.

        ## Authorization

        Only users with **Manage dataset responsibilities** permission can update dataset responsibilities. Soda Cloud Admins have permission to update all datasets responsibilities.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**The Response of this call, when successful, is `201` and contains header `Location` which identify the URL where the responsibilities will eventually become available.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Datasets`

        ## Rate limiting

        10 requests/60 seconds
      operationId: "POST/api/v1/datasets/{datasetId}/responsibilities"
      parameters:
      - in: path
        name: datasetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/PublicApiUpdateDatasetResponsibilitiesRequestDTO'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Update dataset responsibilities
      tags:
      - Datasets
  /api/v1/incidents/{incidentId}:
    post:
      description: |-
        This endpoint enables you to update an existing incident title, severity, status, or description in your organization's Soda Cloud account.

        ## Authorization

        Only users with **Manage incident** permission can update incidents. Soda Cloud Admins have permission to update all incidents.**See [Manage dataset roles](https://go.soda.io/roles) for more information.**

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Tags

        `Incidents`

        ## Rate limiting

        10 requests/60 seconds
      operationId: "POST/api/v1/incidents/{incidentId}"
      parameters:
      - in: path
        name: incidentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/PublicApiUpdateIncidentDTO'
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/IncidentContentDTO'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Update incident
      tags:
      - Incidents
  /api/v1/scans:
    post:
      description: |-
        This endpoint enables you to execute a scan that has been defined within Soda Cloud and which runs on a Soda Agent connected to the account. Call this endpoint from within your data pipeline to programmatically execute scans from outside the Soda Cloud environment.

        This POST uses the following parameters to provide specific details:

        - `scanDefinition`: Supply a string value to specify the scan definition in Soda Cloud. To retrieve this value, navigate to the Scans page in Soda Cloud, then select the scan definition you wish to execute remotely and copy the scan name, which is the smaller text under the label. For example, `weekday_scan_schedule`. <br /> The scan definition _must be_ connected to a Soda Agent in order to execute a scan remotely, _not_ Soda Library.

        - `dataTimestamp`: (Optional) Supply a value to indicate a specific timestamp for the scan for Soda Cloud. For example, provide a time in the past so that although Soda executes the scan when you call the endpoint, it timestamps the scan with the value you provide so that it appears in the user interface with your supplied timestamp value, not the time at which it actually executed the scan. Supply an ISO8601 timestamp value such as: `2023-12-31T10:15:30+01:00`. If you do not specify a value, Soda uses the current moment to timestamp the scan.

        The Response of this call, when successful, is `201` and contains headers `Location` and `X-Soda-Scan-Id` which identify the executed scan. Use the value of `X-Soda-Scan-Id` in the `scanId` parameter of the **Get scan status**, **Get scan logs**, and **Cancel a scan** endpoints.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Scans`

        ## Rate limiting

        10 requests/60 seconds
      operationId: POST/api/v1/scans
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                dataTimestamp:
                  type: string
                scanDefinition:
                  type: string
              required:
              - scanDefinition
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
            X-Soda-Scan-Id:
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Trigger a scan
      tags:
      - Scans
  /api/v1/scans/{scanId}:
    delete:
      description: |-
        This endpoint enables you to cancel a scan.

        Depending on the state of the scan when you call this endpoint, the response returns one of the following:

        - Where the state is `pending`, Soda immediately changes the state to `canceled`.

        - Where the state is `submitted`, Soda immediately changes the state to `cancelationRequested`. - Where the scan is in any other state, the endpoint returns a `400` (Bad request) response.

        This DELETE uses the following parameters to provide specific details:

        - `scanId`: Use the value of `X-Soda-Scan-Id` returned as part of the `201` response when you called the **Trigger a scan** endpoint.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Scans`

        ## Rate limiting

        10 requests/60 seconds
      operationId: "DELETE/api/v1/scans/{scanId}"
      parameters:
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          description: Successful response
          headers:
            Location:
              schema:
                type: string
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Cancel a scan
      tags:
      - Scans
    get:
      description: |-
        This endpoint enables you to check on the state of a scan that you executed using the **Trigger a scan** endpoint. Call this endpoint to monitor the status of a scan during its execution.

        If you wish to access the logs of a completed scan, use the **Get scan logs** endpoint.

        This POST uses the following parameter to provide specific details:

        - `scanId`: Use the value of `X-Soda-Scan-Id` returned as part of the `201` response when you called the **Trigger a scan** endpoint.

        As a scan executes, you can call this endpoint to progressively collect values based on the state of the scan. Refer to the list below for the states that calls to this endpoint return.

        - `queuing`: The scan is in the queue for execution, awaiting a pick-up from a Soda Agent.

        - `executing`: A Soda Agent has picked up the scan and is executing.

        - `cancelationRequested`: An entity requested cancelation of this scan and the request is awaiting pick-up from the Soda Agent responsible for the scan.

        - `timeOutRequested`: A time out has been detected, and an automatic request to stop the scan execution is awaiting pick-up from the Soda Agent responsible for the scan.

        - `canceled`: A Soda Agent confirmed that the scan has been cancelled. This is the final state of the scan.

        - `timedOut`: A Soda Agent confirmed that the scan has timed-out. This is the final state of the scan.

        - `failed`: The scan did not start, or it did not successfully complete because of an unexpected cause. This is the final state of the scan.

        - `completedWithErrors`: The scan completed successfully, but there were errors involving some of the checks in the scan. This is the final state of the scan.

        - `completedWithFailures`: The scan completed successfully and reveals failed results for some checks. This is the final state of the scan.

        - `completedWithWarnings`: The scan completed successfully and reveals warning results for some checks. This is the final state of the scan.

        - `completed`: The scan completed successfully and reveals passing results for all checks. This is a final state of a scan

        To get the logs of the completed scan, please use API `/api/v1/scans/{scanId}/logs`.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Scans`

        ## Rate limiting

        60 requests/60 seconds
      operationId: "GET/api/v1/scans/{scanId}"
      parameters:
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiScanStatusResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get scan status
      tags:
      - Scans
  /api/v1/scans/{scanId}/logs:
    get:
      description: |-
        This endpoint enables you to gather log details about the final state of a scan you executed using the **Trigger a scan** endpoint. Use this endpoint to study scan logs to investigate issues with its execution.

        If you wish to access the state of a scan in progress, use the **Get scan status** endpoint.

        This GET is a paginated API that uses the following parameters to request specific details:

        - `scanId`: Use the value of `X-Soda-Scan-Id` returned as part of the `201` response when you called the **Trigger a scan** endpoint.

        - `size`: Supply an integer value between 100 and 1000, inclusive. The default value is 1000.

        - `page`: Supply an integer value. The default value is 0.

        The response sorts the the log information by creation timestamp in ascending order.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Scans`

        ## Rate limiting

        60 requests/60 seconds
      operationId: "GET/api/v1/scans/{scanId}/logs"
      parameters:
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiScanLogsResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get scan logs
      tags:
      - Scans
  /api/v1/test-login:
    get:
      description: |-
        This endpoint enables you to test the API connection to your organization's Soda Cloud account. Use this endpoint to verify that the authentication and authorization details are accurate and the API is ready to accept calls.

        ## Authentication

        User authentication required: `true`

        This endpoint enforces authentication using the API keys you provide in the `Basic` authentication header.

        ## Authorization

        Any Soda Cloud user in your organization may execute this query.

        ## Tags

        `Utility`

        ## Rate limiting

        10 requests/10 seconds
      operationId: GET/api/v1/test-login
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiTestLoginResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Test connection
      tags:
      - Utility
  /api/v1/userGroups:
    get:
      description: "This endpoint enables you to gather information about the user\
        \ groups in your organization's Soda Cloud account, including lists of members.\n\
        \nThis GET is a paginated API that uses the following parameters to request\
        \ specific details:\n\n- `size`: Supply an integer value between 10 and 1000,\
        \ inclusive. The default value is 1000.\n\n- `page`: Supply an integer value.\
        \ The default value is 0.\n\n- `search`: Optionally, use this parameter to\
        \ perform a fuzzy search on the user group name. \n\nIf not specified, the\
        \ query gathers information for all user groups in the account and sorts the\
        \ results by user group name in ascending order.\n\n## Authentication\n\n\
        User authentication required: `true`\n\nThis endpoint enforces authentication\
        \ using the API keys you provide in the `Basic` authentication header.\n\n\
        ## Authorization\n\nAny Soda Cloud user in your organization may execute this\
        \ query.\n\n## Tags\n\n`Users`\n\n## Rate limiting\n\n60 requests/60 seconds"
      operationId: GET/api/v1/userGroups
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiUserGroupsResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get user groups
      tags:
      - Users
  /api/v1/users:
    get:
      description: "This endpoint enables you to gather information about the users\
        \ in your organization's Soda Cloud account.\n\nThis GET is a paginated API\
        \ that uses the following parameters to request specific details:\n\n- `size`:\
        \ Supply an integer value between 1 and 1000, inclusive. The default value\
        \ is 1000.\n\n- `page`: Supply an integer value. The default value is 0.\n\
        \n- `search`: Optionally, use this parameter to perform a fuzzy search on\
        \ the user first name, last name, or email address. \n\nIf not specified,\
        \ the query gathers information for all users in the account and sorts the\
        \ results by user name in ascending order.\n\n## Authentication\n\nUser authentication\
        \ required: `true`\n\nThis endpoint enforces authentication using the API\
        \ keys you provide in the `Basic` authentication header.\n\n## Authorization\n\
        \nAny Soda Cloud user in your organization may execute this query.\n\n## Tags\n\
        \n`Users`\n\n## Rate limiting\n\n60 requests/60 seconds"
      operationId: GET/api/v1/users
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          format: int32
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: size
        schema:
          type: integer
          format: int32
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
        "200":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PublicApiUsersResponse'
          description: Successful response
        "429":
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
      security:
      - basicAuthApiKey: []
      summary: Get users
      tags:
      - Users
servers:
- description: Cloud EU
  url: https://cloud.soda.io
- description: Cloud US
  url: https://cloud.us.soda.io
tags:
- description: Soda Cloud API Check Endpoints
  name: Checks
- description: Soda Cloud API Dataset Endpoints
  name: Datasets
- description: Soda Cloud API Incidents Endpoints
  name: Incidents
- description: Soda Cloud API Scan Endpoints
  name: Scans
- description: Soda Cloud API Users Endpoints
  name: Users
- description: Soda Cloud API Utility Endpoints
  name: Utility
