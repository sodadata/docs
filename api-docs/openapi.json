{
  "openapi": "3.0.2",
  "info": {
    "title": "Soda Cloud Reporting API",
    "description": "\nThis API enables you to query data from your Soda Cloud account. Use the data to build reporting dashboards that\ncommunicate how users in your organization are adopting and making use of Soda Cloud.\n\nAuthentication\n-----\nTo use the API, you must provide a username and password (your Soda Cloud login credentials) according to\nthe `HTTPBasic` security protocol.\n\nTesting\n-----\nYou can test the API using the following methods.\n* Test the API endpoints within the documentation. Provide the authentication credentials, when required,\nin the **Auth** toggle in the testing window embedded in each endpoint's documentation.\n* Test the API using an API testing platform such as Postman. Provide the `Basic Auth` authentication\ncredentials in your chosen testing platform.\n* Test the API using an HTTP request library such as `httpx` in Python, an example of which follows.\n```python\nimport httpx\nrequest_result = httpx.post(\"<endpoint_URL>\", auth=(\"username\", \"password\"))\n```\n",
    "version": "0.0.0-a2"
  },
  "servers": [
    { "url": "https://reporting.cloud.soda.io", "description": "Soda Cloud" }
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": ["Status"],
        "summary": "Soda can is open",
        "description": "Ping this endpoint to test whether the Reporting API is live.\nReturns the sound of a Soda can opening along with a 200.",
        "operationId": "soda_can_is_open_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v0/adoption/sign_ups": {
      "post": {
        "tags": ["Tool Adoption"],
        "summary": "Sign-ups",
        "description": "This endpoint returns sign-up events for the authenticated user's organization.\n\nTo avoid incomplete reporting, Soda currently updates this data once per day and does not include\nthe current date (UTC).\n\n**NOTE:** The event tracking solution does not currently track users who signed up via SSO.\n\nUsage\n-----\nUse this endpoint to build reports about Soda's adoption across your organization.\n\nReturns\n-------\nAn object of type `SignUpsResult` containing an array of `SignUpData`.\n\nFind details about the response objects in the **Schemas** section or by unfurling the response\ndetails.",
        "operationId": "sign_ups_v0_adoption_sign_ups_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignUpsResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/adoption/sign_ins": {
      "post": {
        "tags": ["Tool Adoption"],
        "summary": "Sign-ins",
        "description": "This endpoint provides the number of logins for a specific user per day.\n\nTo avoid incomplete reporting, Soda currently updates this data once per day and does not include\nthe current date (UTC).\n\n**NOTE:** The event tracking solution does not currently track users who signed up via SSO.\n\nUsage\n-----\nUse this endpoint to build reports about Soda's adoption throughout your organization.\n\nReturns\n-------\nAn object of type `SignInsResult` containing an array of `SignInData`\n\nFind details about the response objects in the **Schemas** section or by unfurling the response\ndetails.",
        "operationId": "sign_ins_v0_adoption_sign_ins_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignInsResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/adoption/daily_account_activity": {
      "post": {
        "tags": ["Tool Adoption"],
        "summary": "Daily account activity",
        "description": "This endpoint provides a daily count of activity events for the authenticated user's organization.\n\nThe endpoint groups events into one of two groups: \"Level 0\" or \"Level 1\".\n\n**Level 0**: Activity of type **\"Read\"/\"View\"** (For example, view a dataset, view a monitor result.)\n**Level 1**: Activity of type **\"Create\"/\"Update\"** (For example, create a monitor, update a monitor configuration.)\n\nTo avoid incomplete reporting, Soda currently updates this data once per day and does not include\nthe current date (UTC).\n\nUsage\n-----\nUse this endpoint to build reports about Soda's adoption and usage throughout your organization.\n\nReturns\n-------\nAn object of type `DailyAccountActivityResult` containing an array of `DailyAccountActivityData`.\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "daily_account_activity_v0_adoption_daily_account_activity_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAccountActivityResult"
                }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/impact/alerts_sent": {
      "post": {
        "tags": ["Platform Impact"],
        "summary": "Alerts sent",
        "description": "This endpoint provides a daily count of alerts Soda has sent to a specific user.\n\nThe endpoint groups alerts into one of three groups corresponding to the criticality level of the alert\n(\"Info\", \"Warning\", \"Critical).\n\nTo avoid incomplete reporting, Soda currently updates this data once per day and does not include\nthe current date (UTC).\n\nUsage\n-----\nUse this endpoint to understand the number of alerts that Soda has sent to your team members.\nYou may, however, prefer using the `/test_and_results` endpoint to examine exactly which tests\nfailed.\n\nReturns\n-------\nAn object of type `DailyAlertsSentResult` containing an array of `DailyAlertsSentData`.\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "alerts_sent_v0_impact_alerts_sent_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAlertsSentResult"
                }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/adoption/scans_run": {
      "post": {
        "tags": ["Tool Adoption"],
        "summary": "Scans run",
        "description": "This endpoint provides a per-user daily count of scans that users run, as well as the number of test\nresults that Soda has evaluated.\n\nUsage\n-----\nUse this endpoint to report about the adoption of Soda throughout your organization.\n\nReturns\n-------\nAn object of type `DailyAlertsSentResult` containing an array of `DailyAlertsSentData`.\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "scans_run_v0_adoption_scans_run_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScansRunResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/coverage/tests": {
      "post": {
        "tags": ["Coverage"],
        "summary": "Tests",
        "description": "This endpoint provides a real-time list of all the tests that exist in your organization's account,\nas well as the datasets upon which each test depends.\n\nUsage\n-----\nUse this endpoint to enrich results from the `/datasets` or `/tests_and_results` endpoints.\n\nReturns\n-------\nAn object of type `TestsResult` containing an array of `TestsData` for each test.\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "tests_v0_coverage_tests_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TestsResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/coverage/datasets": {
      "post": {
        "tags": ["Coverage"],
        "summary": "Datasets",
        "description": "This endpoint provides information about all the datasets that your team has connected to your organization's\nSoda Cloud account.\n\nUsage\n-----\nUse this endpoint to review the number of datasets Soda Cloud accesses, including each dataset's most recent scan\ntime and test failure counts.\n\nUse the data from this endpoint to enrich other endpoints' data such as `/dataset_health` and\n`/dataset_coverage`\n\nReturns\n-------\nAn object of type `DatasetsResult` containing an array of `DatasetsData`\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "datasets_v0_coverage_datasets_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DatasetsResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/quality/tests_and_results": {
      "post": {
        "tags": ["Quality"],
        "summary": "Test results",
        "description": "This endpoint provides a list of tests along with each test's historical evaluation results.\n\nUsage\n-----\nUse this endpoint to build reports that show the outcome of your tests over time. If you gathered high-level data\nfrom the `/dataset_health` and `/dataset_coverage` endpoints, you can use this endpoint to examine more granular\ndata about tests that apply to each dataset.\n\nReturns\n-------\nAn object of type `TestsAndResultsResult` containing an array of `TestsAndResultsData`\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "test_results_v0_quality_tests_and_results_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsAndResultsResult"
                }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/quality/dataset_health": {
      "post": {
        "tags": ["Quality"],
        "summary": "Dataset health",
        "description": "This endpoint provides you with a daily measure of the health of each of your datasets. Soda calculated a dataset's\nhealth based on the number of tests that pass during a scan.\n\nUsage\n-----\nUse this endpoint to get review the health of your datasets, and to see a high-level view of the more granular\ninformation that the `/tests_and_results` endpoint provides.\n\nUse this endpoint in conjunction with the `/datasets` endpoint as the latter adds information about each\ndataset.\n\nReturns\n-------\nAn object of type `DatasetHealthResult` containing an array of `DatasetHealthData`\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "dataset_health_v0_quality_dataset_health_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DatasetHealthResult" }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    },
    "/v0/coverage/dataset_coverage": {
      "post": {
        "tags": ["Coverage"],
        "summary": "Dataset coverage",
        "description": "This endpoint provides a daily measure of the test coverage of your datasets.\nIt derives a `relative_coverage_score` which compares the number of tests that apply to a single dataset to\nother datasets connected to your organization's Soda Cloud account. (Refer to the `DatasetCoverageData` schema\nfor more information.)\n\nUsage\n-----\nUse this endpoint to review the relative test coverage of your datasets, and to see a high-level view of the more\ngranular information that the `/tests_and_results` endpoint provides.\n\nThis endpoint is best used in conjunction with the `/datasets` endpoint as the latter augments the level of\ninformation about each dataset.\n\nReturns\n-------\nAn object of type `DatasetCoverageResult` containing an array of `DatasetCoverageData`\n\nFind details about the response objects in the **Schemas** section or by\nunfurling the response details.",
        "operationId": "dataset_coverage_v0_coverage_dataset_coverage_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetCoverageResult"
                }
              }
            }
          }
        },
        "security": [{ "HTTPBasic": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "DailyAccountActivityData": {
        "title": "DailyAccountActivityData",
        "type": "object",
        "properties": {
          "on_date": {
            "title": "On Date",
            "type": "string",
            "description": "Date on which an activity for the authenticated user's organization took place.",
            "format": "date"
          },
          "active_level_0_users": {
            "title": "Active Level 0 Users",
            "type": "integer",
            "description": "Number of unique users who performed a Level 0 type of activity."
          },
          "active_level_1_users": {
            "title": "Active Level 1 Users",
            "type": "integer",
            "description": "Number of unique users who performed a Level 1 type of activity."
          },
          "level_0_events": {
            "title": "Level 0 Events",
            "type": "integer",
            "description": "Number of Level 0 events."
          },
          "level_1_events": {
            "title": "Level 1 Events",
            "type": "integer",
            "description": "Number of Level 1 events."
          }
        },
        "description": "Daily count of activity events for the authenticated user's organization.\n\nSoda groups events into two groups: \"Level 0\" or \"Level 1\".\nEvent are grouped into \"Level 0\" and \"Level 1\":\n\n    - Level 0: Activity of type \"Read\"/\"View\" (For example, view a dataset, view monitor result.)\n    - Level 1: Activity of type \"Create/Update\" (For example, create a monitor, update a monitor configuration)"
      },
      "DailyAccountActivityResult": {
        "title": "DailyAccountActivityResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DailyAccountActivityData" }
          }
        },
        "description": "Array of `DailyAccountActivityData`."
      },
      "DailyAlertsSentData": {
        "title": "DailyAlertsSentData",
        "type": "object",
        "properties": {
          "user_email": {
            "title": "User Email",
            "type": "string",
            "description": "Email address of the user who received an alert."
          },
          "on_date": {
            "title": "On Date",
            "type": "string",
            "description": "Date on which an alert was sent.",
            "format": "date"
          },
          "count_info_alerts": {
            "title": "Count Info Alerts",
            "type": "integer",
            "description": "Number of Info level alerts sent to the user on the report date."
          },
          "count_warning_alerts": {
            "title": "Count Warning Alerts",
            "type": "integer",
            "description": "Number of Warning level alerts sent to the user on the report date."
          },
          "count_critical_alerts": {
            "title": "Count Critical Alerts",
            "type": "integer",
            "description": "Number of Critical level alerts sent to the user on the report date."
          }
        },
        "description": "Aggregate counts of alerts sent on a specific day to a specific user, split by severity level."
      },
      "DailyAlertsSentResult": {
        "title": "DailyAlertsSentResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DailyAlertsSentData" }
          }
        },
        "description": "Array of `DailyAlertsSentData`."
      },
      "DatasetCoverageDataObject": {
        "title": "DatasetCoverageDataObject",
        "required": ["descriptives", "dataset_info"],
        "type": "object",
        "properties": {
          "descriptives": {
            "$ref": "#/components/schemas/DatasetCoverageDescriptivesData"
          },
          "dataset_info": {
            "title": "Dataset Info",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DatasetInfoData" }
          }
        },
        "description": "Array of `DatasetInfoData` and `DatasetCoverageDescriptivesData`."
      },
      "DatasetCoverageDescriptivesData": {
        "title": "DatasetCoverageDescriptivesData",
        "type": "object",
        "properties": {
          "median_number_of_tests": {
            "title": "Median Number Of Tests",
            "type": "number",
            "description": "Median number of tests across all datasets in your organization.",
            "default": 0.0
          },
          "max_number_of_tests": {
            "title": "Max Number Of Tests",
            "type": "number",
            "description": "Maximum number of tests across all datasets in your organization.",
            "default": 0.0
          },
          "min_number_of_tests": {
            "title": "Min Number Of Tests",
            "type": "number",
            "description": "Minimum number of tests across all datasets in your organization.",
            "default": 0.0
          },
          "standard_deviation_number_of_tests": {
            "title": "Standard Deviation Number Of Tests",
            "type": "number",
            "description": "Standard deviation of the number of tests across all datasets in your organization.",
            "default": 0.0
          },
          "mean_number_of_tests": {
            "title": "Mean Number Of Tests",
            "type": "number",
            "description": "Mean number of tests across all datasets in your organization.",
            "default": 0.0
          }
        },
        "description": "Contains coverage descriptives across datasets."
      },
      "DatasetCoverageResult": {
        "title": "DatasetCoverageResult",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/DatasetCoverageDataObject" },
          "resource": {
            "title": "Resource",
            "type": "string",
            "default": "dataset_coverage"
          }
        },
        "description": "Array of `DatasetInfoData` and `DatasetCoverageDescriptivesData`."
      },
      "DatasetHealthData": {
        "title": "DatasetHealthData",
        "type": "object",
        "properties": {
          "dataset_id": {
            "title": "Dataset Id",
            "type": "string",
            "description": "Unique identifier for a dataset (UUID) in Soda Cloud."
          },
          "scan_date": {
            "title": "Scan Date",
            "type": "string",
            "description": "Date at which any number of scans were run.",
            "format": "date"
          },
          "critical": {
            "title": "Critical",
            "type": "integer",
            "description": "Number of tests and monitors that failed with a Critical level alert."
          },
          "info": {
            "title": "Info",
            "type": "integer",
            "description": "Number of tests and monitors that passed."
          },
          "warning": {
            "title": "Warning",
            "type": "integer",
            "description": "Number of tests and monitors that failed with a Warning level alert."
          },
          "number_of_tests": {
            "title": "Number Of Tests",
            "type": "integer",
            "description": "Number of tests and monitors executed."
          },
          "percentage_passing_tests": {
            "title": "Percentage Passing Tests",
            "type": "number",
            "description": "Proportion of tests and monitors that passed."
          }
        },
        "description": "Dataset health information containing counts of passing or failing tests (warning or critical) per scan date."
      },
      "DatasetHealthResult": {
        "title": "DatasetHealthResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DatasetHealthData" }
          }
        },
        "description": "Array of `DatasetHealthData`."
      },
      "DatasetInfoData": {
        "title": "DatasetInfoData",
        "type": "object",
        "properties": {
          "dataset_id": {
            "title": "Dataset Id",
            "type": "string",
            "description": "\nIdentifier (UUID) of the dataset in Soda Cloud. Join with the results of the `datasets` endpoint for more\ninformation.\n        "
          },
          "is_deleted": {
            "title": "Is Deleted",
            "type": "boolean",
            "description": "True if the dataset was deleted; false if the dataset is active."
          },
          "number_of_tests": {
            "title": "Number Of Tests",
            "type": "integer",
            "description": "Number of tests covering a specific dataset."
          },
          "relative_coverage_score": {
            "title": "Relative Coverage Score",
            "type": "string",
            "description": "\nA score derived by comparing the number of tests that apply to a single dataset to the number of tests\nthat apply to other datasets in your organization's Soda Cloud account. Soda applies the labels \"good\", \"medium\", and\n\"poor\" based on a 3-ntile split.\n        "
          }
        },
        "description": "Information about a dataset including whether a dataset is active or deleted,\nand test coverage metrics."
      },
      "DatasetsData": {
        "title": "DatasetsData",
        "type": "object",
        "properties": {
          "dataset_id": {
            "title": "Dataset Id",
            "type": "string",
            "description": "Identifier (UUID) of the dataset in Soda Cloud."
          },
          "dataset_name": {
            "title": "Dataset Name",
            "type": "string",
            "description": "Name of the dataset in Soda Cloud."
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": { "type": "string" },
            "description": "User-provided list of tags."
          },
          "number_of_failed_tests": {
            "title": "Number Of Failed Tests",
            "type": "integer",
            "description": "Number of tests that failed on a specific dataset."
          },
          "is_deleted": {
            "title": "Is Deleted",
            "type": "boolean",
            "description": "True if the dataset was deleted; false if the dataset is active."
          },
          "last_scan_time": {
            "title": "Last Scan Time",
            "type": "string",
            "description": "UTC timestamp of the last scan run on a dataset.",
            "format": "date-time"
          }
        },
        "description": "Contains information about a dataset."
      },
      "DatasetsResult": {
        "title": "DatasetsResult",
        "required": ["data"],
        "type": "object",
        "properties": {
          "resource": {
            "title": "Resource",
            "type": "string",
            "default": "datasets"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DatasetsData" }
          }
        },
        "description": "Array of `DatasetsData`."
      },
      "ScansRunData": {
        "title": "ScansRunData",
        "type": "object",
        "properties": {
          "user_email": {
            "title": "User Email",
            "type": "string",
            "description": "Email address of the user who ran a scan."
          },
          "on_date": {
            "title": "On Date",
            "type": "string",
            "description": "Date on which a user ran at least one scan.",
            "format": "date"
          },
          "number_of_scans": {
            "title": "Number Of Scans",
            "type": "integer",
            "description": "Number of successfully-ended scans run by a user on the reported date."
          },
          "number_of_test_results": {
            "title": "Number Of Test Results",
            "type": "integer",
            "description": "Number of test results for all scans."
          }
        },
        "description": "Number of scans run and tests executed by a user on a specific report date."
      },
      "ScansRunResult": {
        "title": "ScansRunResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ScansRunData" }
          }
        },
        "description": "Array of `ScansRunData`."
      },
      "SignInData": {
        "title": "SignInData",
        "type": "object",
        "properties": {
          "user_email": {
            "title": "User Email",
            "type": "string",
            "description": "Email address of the user who signed in."
          },
          "on_date": {
            "title": "On Date",
            "type": "string",
            "description": "Date on which the user signed in.",
            "format": "date"
          },
          "count_sign_in": {
            "title": "Count Sign In",
            "type": "integer",
            "description": "Number of times a specific user signed in."
          }
        },
        "description": "Count of sign-in events per user per day."
      },
      "SignInsResult": {
        "title": "SignInsResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignInData" }
          }
        },
        "description": "Array of `SignInData`."
      },
      "SignUpData": {
        "title": "SignUpData",
        "type": "object",
        "properties": {
          "user_email": {
            "title": "User Email",
            "type": "string",
            "description": "Email address of the user who signed up."
          },
          "on_date": {
            "title": "On Date",
            "type": "string",
            "description": "Date on which the user signed up.",
            "format": "date"
          }
        },
        "description": "List of sign-up events per user per date."
      },
      "SignUpsResult": {
        "title": "SignUpsResult",
        "required": ["resource", "data"],
        "type": "object",
        "properties": {
          "resource": { "title": "Resource", "type": "string" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignUpData" }
          }
        },
        "description": "Array of `SignUpData`"
      },
      "TestsAndResultsData": {
        "title": "TestsAndResultsData",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "description": "\nType of Soda test. For example, the type is \"metric\" if the test uses a metric in Soda Cloud;\n\"external\" if the test is evaluated by Soda SQL.\n        "
          },
          "test_id": {
            "title": "Test Id",
            "type": "string",
            "description": "Identifier (UUID) of a est in Soda Cloud."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of a specific test in Soda Cloud or in the `name:` tag in a Soda SQL YAML file."
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "UTC timestamp at which the test was created.",
            "format": "date-time"
          },
          "dataset_ids": {
            "title": "Dataset Ids",
            "type": "array",
            "items": { "type": "string" },
            "description": "\nList of identifiers (UUID) of the datasets in Soda Cloud.\nJoin with the results from the `datasets` endpoint for more information.\n        "
          },
          "test_creator_info": {
            "title": "Test Creator Info",
            "allOf": [{ "$ref": "#/components/schemas/UserInfo" }],
            "description": "\nDict of information about the test's creator.\nRefer to the `UserInfo` schema for more information about each field.\n        "
          },
          "test_owner_info": {
            "title": "Test Owner Info",
            "allOf": [{ "$ref": "#/components/schemas/UserInfo" }],
            "description": "\nDict of information about the test's owner.\nRefer to the `UserInfo` schema for more information about each field.\n        "
          },
          "result_id": {
            "title": "Result Id",
            "type": "string",
            "description": "Identifier (UUID) of a test result in Soda Cloud."
          },
          "scan_time": {
            "title": "Scan Time",
            "type": "string",
            "description": "UTC timestamp of the scan that generated a specific test result.",
            "format": "date-time"
          },
          "level": {
            "title": "Level",
            "type": "string",
            "description": "Severity level of a test result. Levels are: 'info', 'warning', and 'critical'."
          }
        },
        "description": "Contains information about tests and their results on a per scan basis."
      },
      "TestsAndResultsResult": {
        "title": "TestsAndResultsResult",
        "required": ["data"],
        "type": "object",
        "properties": {
          "resource": {
            "title": "Resource",
            "type": "string",
            "default": "tests_and_results"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestsAndResultsData" }
          }
        },
        "description": "Array of `TestsAndResultsData`."
      },
      "TestsData": {
        "title": "TestsData",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "description": "\nType of Soda test. For example, the type is \"metric\" if the test uses a metric in Soda Cloud;\n\"external\" if the test is evaluated by Soda SQL.\n        "
          },
          "test_id": {
            "title": "Test Id",
            "type": "string",
            "description": "Identifier (UUID) of a est in Soda Cloud."
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of a specific test in Soda Cloud or in the `name:` tag in a Soda SQL YAML file."
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "UTC timestamp at which the test was created.",
            "format": "date-time"
          },
          "dataset_ids": {
            "title": "Dataset Ids",
            "type": "array",
            "items": { "type": "string" },
            "description": "\nList of identifiers (UUID) of the datasets in Soda Cloud.\nJoin with the results from the `datasets` endpoint for more information.\n        "
          },
          "test_creator_info": {
            "title": "Test Creator Info",
            "allOf": [{ "$ref": "#/components/schemas/UserInfo" }],
            "description": "\nDict of information about the test's creator.\nRefer to the `UserInfo` schema for more information about each field.\n        "
          },
          "test_owner_info": {
            "title": "Test Owner Info",
            "allOf": [{ "$ref": "#/components/schemas/UserInfo" }],
            "description": "\nDict of information about the test's owner.\nRefer to the `UserInfo` schema for more information about each field.\n        "
          }
        },
        "description": "Contains information about a test and its associated datasets."
      },
      "TestsResult": {
        "title": "TestsResult",
        "required": ["data"],
        "type": "object",
        "properties": {
          "resource": {
            "title": "Resource",
            "type": "string",
            "default": "tests"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TestsData" }
          }
        },
        "description": "Array of `TestsData`."
      },
      "UserInfo": {
        "title": "UserInfo",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Identifier (UUID) of a user in Soda Cloud."
          },
          "first_name": {
            "title": "First Name",
            "type": "string",
            "description": "First name of the user."
          },
          "last_name": {
            "title": "Last Name",
            "type": "string",
            "description": "Last name of the user."
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "Email address of the user as registered when the user created the account."
          },
          "job_title": {
            "title": "Job Title",
            "type": "string",
            "description": "Job title of the user."
          },
          "phone_number": {
            "title": "Phone Number",
            "type": "string",
            "description": "Phone number of the user."
          },
          "country": {
            "title": "Country",
            "type": "string",
            "description": "\nISO 3166-1 alpha-2 country code of the user's country as registered when the user created the account.\n        "
          }
        },
        "description": "User information data."
      }
    },
    "securitySchemes": { "HTTPBasic": { "type": "http", "scheme": "basic" } }
  }
}
